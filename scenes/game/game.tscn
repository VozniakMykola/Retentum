[gd_scene load_steps=17 format=3 uid="uid://b4kdmhic4mr1h"]

[ext_resource type="Script" uid="uid://dm02qk28362ba" path="res://scenes/game/game.gd" id="1_sul5r"]
[ext_resource type="PackedScene" uid="uid://vehhxxbdjcvg" path="res://scenes/monke/monke.tscn" id="2_7h61r"]
[ext_resource type="Shader" uid="uid://40wnyr407jkc" path="res://assets/vfx/godrays.gdshader" id="3_0sr1o"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_0sr1o"]
sky_top_color = Color(0.788067, 0.805148, 0.845383, 1)
sky_horizon_color = Color(0.634253, 0.645978, 0.677115, 1)
ground_bottom_color = Color(0.233161, 0.251958, 0.297078, 1)

[sub_resource type="Sky" id="Sky_kelw5"]
sky_material = SubResource("ProceduralSkyMaterial_0sr1o")

[sub_resource type="Environment" id="Environment_lfrn8"]
background_mode = 1
background_color = Color(0.0807833, 0.0807833, 0.0807833, 1)
sky = SubResource("Sky_kelw5")
ambient_light_source = 3
reflected_light_source = 2
tonemap_mode = 3
glow_enabled = true

[sub_resource type="Shader" id="Shader_2xr0j"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D source_texture : source_color;
uniform vec2 texture_size = vec2(1024.0, 1024.0);

uniform bool use_polar_coordinates = false;
uniform vec2 polar_center = vec2(0.5);
uniform float polar_zoom = 1.0;
uniform float polar_repeat = 1.0;

uniform highp float spin_rotation; 
uniform highp float spin_speed = 2.0;
uniform highp vec2 texture_offset = vec2(0.0, 0.0); 
uniform highp vec4 extreme_color : source_color = vec4(0.0235, 0.1137, 0.3020, 1.0); // #061d4d
uniform highp vec4 central_color : source_color = vec4(0.5333, 0.6980, 0.3059, 1.0); // #88b24e
uniform highp vec4 intermediate_color : source_color = vec4(0.0627, 0.1725, 0.7608, 1.0); // #102cc2
uniform highp float color_contrast = 1.0;
uniform highp float spin_intensity = 0.36;
uniform highp float pixelation_factor = 1024.0;
#define SPIN_EASE 1.0

vec4 apply_effect(vec2 screen_size, vec2 screen_coords) {
	highp float pixel_size = length(screen_size) / pixelation_factor;
	highp vec2 uv = (floor(screen_coords * (1.0 / pixel_size)) * pixel_size - 0.5 * screen_size) / length(screen_size) - texture_offset;
	highp float uv_length = length(uv);
	
	highp float rotation_speed = (spin_rotation * SPIN_EASE * 0.2) + 302.2;
	highp float pixel_angle = atan(uv.y, uv.x) + rotation_speed - SPIN_EASE * 20.0 * (spin_intensity * uv_length + (1.0 - spin_intensity));
	highp vec2 screen_center = (screen_size / length(screen_size)) / 2.0;
	uv = vec2(uv_length * cos(pixel_angle) + screen_center.x, uv_length * sin(pixel_angle) + screen_center.y) - screen_center;
	
	uv *= 30.0;
	rotation_speed = TIME * spin_speed;
	highp vec2 uv_distortion = vec2(uv.x + uv.y);
	
	for (int i = 0; i < 5; i++) {
		uv_distortion += sin(max(uv.x, uv.y)) + uv;
		uv += 0.5 * vec2(cos(5.1123314 + 0.353 * uv_distortion.y + rotation_speed * 0.131121), sin(uv_distortion.x - 0.113 * rotation_speed));
		uv -= cos(uv.x + uv.y) - sin(uv.x * 0.711 - uv.y);
	}
	
	highp float contrast_modifier = (0.25 * color_contrast + 0.5 * spin_intensity + 1.2);
	highp float paint_result = clamp(length(uv) * 0.035 * contrast_modifier, 0.0, 2.0);
	highp float extreme_weight = max(0.0, 1.0 - contrast_modifier * abs(1.0 - paint_result));
	highp float central_weight = max(0.0, 1.0 - contrast_modifier * abs(paint_result));
	highp float intermediate_weight = 1.0 - min(1.0, extreme_weight + central_weight);
	
	return (0.3 / color_contrast) * extreme_color +
	       (1.0 - 0.3 / color_contrast) * (extreme_color * extreme_weight + central_color * central_weight + vec4(intermediate_weight * intermediate_color.rgb, intermediate_weight * extreme_color.a));
}

vec2 calculate_polar_coordinates(vec2 uv, vec2 center, float zoom, float repeat) {
	vec2 direction = uv - center;
	float radius = length(direction) * 2.0;
	float angle = atan(direction.y, direction.x) / (PI * 2.0);
	return mod(vec2(radius * zoom, angle * repeat), 1.0);
}

void fragment() {
	vec2 texture_uv = UV;
	if (use_polar_coordinates) {
		texture_uv = calculate_polar_coordinates(UV, polar_center, polar_zoom, polar_repeat);
	}
	vec2 pixel_coordinates = texture_uv * texture_size;
	vec4 color = apply_effect(texture_size, pixel_coordinates);
	ALBEDO = color.rgb;
	ALPHA = color.a;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0sr1o"]
render_priority = -10
shader = SubResource("Shader_2xr0j")
shader_parameter/texture_size = Vector2(1024, 1024)
shader_parameter/use_polar_coordinates = false
shader_parameter/polar_center = Vector2(0.5, 0.5)
shader_parameter/polar_zoom = 1.0
shader_parameter/polar_repeat = 1.0
shader_parameter/spin_rotation = 0.0
shader_parameter/spin_speed = 2.0
shader_parameter/texture_offset = Vector2(0, 0)
shader_parameter/extreme_color = Color(0.0235, 0.1137, 0.302, 1)
shader_parameter/central_color = Color(0.5333, 0.698, 0.3059, 1)
shader_parameter/intermediate_color = Color(0.0627, 0.1725, 0.7608, 1)
shader_parameter/color_contrast = 1.0
shader_parameter/spin_intensity = 0.36
shader_parameter/pixelation_factor = 1024.0

[sub_resource type="QuadMesh" id="QuadMesh_7h61r"]

[sub_resource type="Gradient" id="Gradient_0sr1o"]
offsets = PackedFloat32Array(0, 0.981221, 1)
colors = PackedColorArray(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_kelw5"]
gradient = SubResource("Gradient_0sr1o")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_lfrn8"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_5i0tg"]
noise = SubResource("FastNoiseLite_lfrn8")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_bdhmt"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_87uf6"]
noise = SubResource("FastNoiseLite_bdhmt")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2a8rs"]
render_priority = 0
shader = ExtResource("3_0sr1o")
shader_parameter/alpha = 0.5
shader_parameter/rim_power = 1.0
shader_parameter/texture_emission = SubResource("NoiseTexture2D_87uf6")
shader_parameter/gradient = SubResource("GradientTexture1D_kelw5")
shader_parameter/noise_texture = SubResource("NoiseTexture2D_5i0tg")
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 0.5
shader_parameter/uv1_scale = Vector3(5, 0, 0)
shader_parameter/uv1_offset = Vector3(0, 1, 0)
shader_parameter/scroll_speed = 9.5e-08
shader_parameter/pulse_speed = 1.0
shader_parameter/pulse_intensity = 0.3
shader_parameter/flicker_speed = 2.0
shader_parameter/flicker_amount = 0.2
shader_parameter/ray_variation_speed = 0.5

[node name="Game" type="Node3D"]
script = ExtResource("1_sul5r")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 1e+14, 0)
light_energy = 0.7
shadow_enabled = true
directional_shadow_pancake_size = 0.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_lfrn8")

[node name="IsoCamera" type="Camera3D" parent="."]
transform = Transform3D(0.707107, -0.5, 0.5, 0, 0.707107, 0.707107, -0.707107, -0.5, 0.5, 0, 0, 0)
projection = 1
current = true
size = 15.948
near = 0.466
far = 165.86

[node name="Monke" parent="." instance=ExtResource("2_7h61r")]

[node name="Front" type="CanvasLayer" parent="."]
layer = 2

[node name="Win" type="Button" parent="Front"]
offset_right = 309.0
offset_bottom = 157.0
text = "WIN
"

[node name="Lose" type="Button" parent="Front"]
offset_top = 157.0
offset_right = 309.0
offset_bottom = 314.0
text = "LOSE"

[node name="EnviObjects" type="Node3D" parent="."]

[node name="VoidBottom" type="MeshInstance3D" parent="EnviObjects"]
transform = Transform3D(31.8198, -21.2132, -9.27259e-07, 0, -1.31134e-06, 30, -31.8198, -21.2132, -9.27259e-07, 0, 0, 0)
material_override = SubResource("ShaderMaterial_0sr1o")
mesh = SubResource("QuadMesh_7h61r")
skeleton = NodePath("../..")

[node name="Godrays" type="Node3D" parent="EnviObjects"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 9, 0)

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, 4.22794, 9.77639, 2.84176)
calculate_tangents = false
flip_faces = true
radius = 3.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[node name="CSGCylinder3D2" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, 1.29397, 9.77639, 7.42387)
calculate_tangents = false
flip_faces = true
radius = 2.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[node name="CSGCylinder3D7" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, 3.12727, 9.77639, -4.78788)
calculate_tangents = false
flip_faces = true
radius = 2.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[node name="CSGCylinder3D3" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, 7.93561, 9.77639, -0.959959)
calculate_tangents = false
flip_faces = true
radius = 4.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[node name="CSGCylinder3D4" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, -2.86131, 9.77639, 8.353)
calculate_tangents = false
flip_faces = true
radius = 3.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[node name="CSGCylinder3D6" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, 6.7206, 9.77639, -9.8043)
calculate_tangents = false
flip_faces = true
radius = 3.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[node name="CSGCylinder3D5" type="CSGCylinder3D" parent="EnviObjects/Godrays"]
transform = Transform3D(0.961108, 0.115566, -0.250832, 0, 0.908238, 0.418454, 0.276174, -0.402179, 0.872915, -1.39132, 9.77639, 0.357522)
calculate_tangents = false
flip_faces = true
radius = 3.0
height = 20.0
smooth_faces = false
material = SubResource("ShaderMaterial_2a8rs")

[connection signal="pressed" from="Front/Win" to="." method="_on_win_pressed"]
[connection signal="pressed" from="Front/Lose" to="." method="_on_lose_pressed"]
